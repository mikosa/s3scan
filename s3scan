#!/bin/bash

#Parse Input Variables:
ENCRYPTION="false"
while getopts r:f:p:b:u:t: option;
do
case ${option} in
r) REGION=${OPTARG};;
f) CONTAINS=${OPTARG};;
p) PROFILE=${OPTARG};;
b) BUCKET=${OPTARG};;
u) TEST="true";;
t) THREADS=${OPTARG};;
esac
done

# number of threads, default =1
if [ "$THREADS" == "" ] ; then
    THREADS=1
fi

#profile name, default is "default"
if [ "$PROFILE" == "" ] ; then
    PROFILE="default"
fi

# prepare query: Bucket "Contains" in name 
#To Do: Need Regex instead

if [ "$CONTAINS" != "" ]; then
    query="?contains(Name, \`$CONTAINS\`) == \`true\`"
    
else
    query=""
fi


#this is to test the functioning of API
if [ "$TEST" == "true" ]; then
    if [ "$BUCKET" == "" ] ; then
        echo "Please add bucket name after -b ";
    else
    echo "Testing ..."
   if ! (aws s3api head-bucket --bucket $BUCKET --profile $PROFILE); then echo "Check Bucket name, try again..."; exit 1; fi 
     echo "Success"
     exit
    fi
fi
echo "Preparing Bucket List"

#API list bucket and get region of each then sort by region
mybucketlist=$(aws s3api list-buckets --profile $PROFILE --query "Buckets[$query].{Name:Name, CreationDate :CreationDate}" --output text \
    | xargs -n2 -l bash -c 'locator=$(aws s3api get-bucket-location --bucket $1 --query "LocationConstraint" --output text);\
                            if [ "$locator" == "None" ]; then \
                            locator="us-east-1";\
                            fi;\
                            
                            echo $0" " $1" " $locator; '\
    | awk '{print substr ($1, 0, 10) " " $2 " " $3}'\
    | sort $3)

echo "Starting bucket analysis using $THREADS thread(s)"

echo "$mybucketlist" | awk -v region=$REGION '{ if (region == "") {print $1, $2}\
                                                if (region == $3) {print $1, $2}\
                                                }' \
 |xargs -n2 -P$THREADS -l  bash -c \
            '\
            filenum=$(sh b2.sh $1) \
            && echo  -e "\e[32m $1: \e[33m $0: \e[34m $filenum";\
            '\
 | awk -F: 'BEGIN{
    print "==================================================================================================================================================================================================================";\
    printf "%-70s %-20s %-20s %-15s %-15s %-15s %-20s %-20s %-20s \n", "Bucket", "CreationDate", "Region","LastModified", "Encryption", "Versioning", "StorageType", "Memory", "Price"   ;\
    print "==================================================================================================================================================================================================================";} \
             {split($0,a,":");} {if( a[10] == "")\
             {for(i=10;i>1;i--)\
             { a[i]=a[i-1]; }\
             }} {printf "%-70s %-20s %-20s %-20s %-15s %-15s %-15s %20s %20s %20s \n", a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10] }'
